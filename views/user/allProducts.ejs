<%-include('../layouts/header.ejs')%>
<%-include('../layouts/navbar.ejs')%>


<br>


<style>
   .sidebar-shop {
    background-color: #e2e2e2; /* Changed to white for a cleaner look */
    padding: 20px;
    border-radius: 10px; /* Increased border radius for a more rounded look */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Increased shadow for a more subtle depth */
}
.widget-title {
    font-weight: 700; /* Making the font weight bolder */
    font-size: 1.2em; /* Increasing font size for better visibility */
    margin-bottom: 10px;
}
.search-container {
    margin-bottom: 20px;
    padding: 10px; /* Adding padding around the search input */
    border: 1px solid #e0e0e0; /* Adding a subtle border */
    border-radius: 5px; /* Rounding the corners */
}
.filter-item {
    margin-bottom: 10px;
    padding: 5px; /* Adding padding to increase clickable area */
    border-radius: 5px; /* Making the corners rounded */
}

.filter-item:hover {
    background-color: #f0f0f0; /* Adding a hover effect */
}

/* Assuming you have a way to mark an item as selected, e.g., a class 'selected' */
.filter-item.selected {
    background-color: #e0e0e0; /* Different background color for selected items */
}
.price-range-inputs {
    display: flex; /* Using flexbox for layout */
    justify-content: space-between; /* Spacing the inputs */
    margin-bottom: 10px;
}

.price-range-inputs input {
    flex-grow: 1; /* Make inputs take equal space */
    margin-right: 5px; /* Add some space between inputs */
}




 

    
</style>



<div class="page-wrapper">
    <main class="main">
        <div class="page-content">
            <div class="container">
                <div class="row">
                    <div class="col-lg-9">
                        <%- include('../partials/productlist.ejs', { products: products, currentPage: currentPage, totalPages: totalPages}) %>
                    </div>
                    <aside class="col-lg-3 order-lg-first">
                        <div class="sidebar sidebar-shop">
                            <div class="widget widget-clean">
                                <h3 class="widget-title">Filters</h3>
                                <a href="#" class="sidebar-filter-clear">Clear Filters</a>
                            </div>
                            <div class="search-container">
                                <input type="text" id="search-input" placeholder="Search products..." class="form-control">
                                <button id="apply-search-filter" class="btn btn-primary btn-block">Search</button>
                            </div>
                            <div class="widget widget-collapsible">
                                <h3 class="widget-title">
                                    <a data-toggle="collapse" href="#widget-1" role="button" aria-expanded="true" aria-controls="widget-1">
                                        Category
                                    </a>
                                </h3>
                                <div class="collapse show" id="widget-1">
                                    <div class="widget-body">
                                        <div class="filter-items filter-items-count">
                                            <% categories.forEach(category => { %>
                                                <div class="filter-item">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" class="custom-control-input" id="<%= category._id %>">
                                                        <label class="custom-control-label" for="<%= category._id %>"><%= category.name %></label>
                                                    </div>
                                                </div>
                                            <% }); %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="widget widget-collapsible">
                                <h3 class="widget-title">
                                    <a data-toggle="collapse" href="#widget-5" role="button" aria-expanded="true" aria-controls="widget-5">
                                        Price Range
                                    </a>
                                </h3>
                                <div class="collapse show" id="widget-5">
                                    <div class="widget-body">
                                        <div class="filter-price">
                                            <div class="price-range-inputs">
                                                <input type="number" id="min-price-input" placeholder="Min Price" class="form-control">
                                                <input type="number" id="max-price-input" placeholder="Max Price" class="form-control">
                                            </div>
                                            <button id="apply-price-filter" class="btn btn-primary btn-block">Apply Price Filter</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </aside>
                </div>
            </div>
        </div>
    </main>
</div>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>

document.addEventListener('DOMContentLoaded', function() {
    const checkboxes = document.querySelectorAll('.custom-control-input');
    const applyPriceFilterButton = document.getElementById('apply-price-filter');
    const clearAllFiltersLink = document.querySelector('.sidebar-filter-clear');
    const searchInput = document.getElementById('search-input');
    const applySearchFilterButton = document.getElementById('apply-search-filter');

    // Function to update the product list based on the current filters and search term
    function updateProductList() {
        const queryParams = new URLSearchParams(window.location.search);

        // Update categories
        let selectedCategories = [];
        checkboxes.forEach(cb => {
            if (cb.checked) {
                selectedCategories.push(cb.id);
            }
        });
        queryParams.set('categories', selectedCategories.join(','));

        // Update price range
        const minPrice = document.getElementById('min-price-input').value;
        const maxPrice = document.getElementById('max-price-input').value;
        queryParams.set('minPrice', minPrice);
        queryParams.set('maxPrice', maxPrice);

        // Update search term
        const searchTerm = searchInput.value;
        queryParams.set('search', searchTerm);

        const newUrl = '?' + queryParams.toString();

        // Use AJAX to fetch the filtered data without reloading the page
        $.ajax({
            url: newUrl,
            type: 'GET',
            success: function(data) {
                // Replace the existing product list with the new one
                $('#product-list-container').html(data);
            },
            error: function(error) {
                console.error('Error fetching filtered data:', error);
            }
        });
    }

    // Apply category filter when a checkbox is changed
    checkboxes.forEach(checkbox => {
        checkbox.addEventListener('change', updateProductList);
    });

    // Apply price filter when the "Apply Price Filter" button is clicked
    applyPriceFilterButton.addEventListener('click', function(event) {
        event.preventDefault(); // Prevent the default form submission
        updateProductList();
    });

    // Clear all filters when the "Clean All" link is clicked
    clearAllFiltersLink.addEventListener('click', function(event) {
        event.preventDefault(); // Prevent the default link behavior

        // Clear category checkboxes
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
        });

        // Clear price range inputs
        document.getElementById('min-price-input').value = '';
        document.getElementById('max-price-input').value = '';

        // Clear search input
        searchInput.value = '';

        // Update the URL to remove filter parameters
        const queryParams = new URLSearchParams(window.location.search);
        queryParams.delete('categories');
        queryParams.delete('minPrice');
        queryParams.delete('maxPrice');
        queryParams.delete('search');
        const newUrl = '?' + queryParams.toString();

        // Use AJAX to fetch the filtered data without reloading the page
        $.ajax({
            url: newUrl,
            type: 'GET',
            success: function(data) {
                // Replace the existing product list with the new one
                $('#product-list-container').html(data);
            },
            error: function(error) {
                console.error('Error fetching filtered data:', error);
            }
        });
    });

    // Apply search filter when the "Search" button is clicked
    applySearchFilterButton.addEventListener('click', function(event) {
        event.preventDefault(); // Prevent the default form submission
        updateProductList();
    });
});

</script>





<%-include('../layouts/footbar.ejs')%>
<%-include('../layouts/footer.ejs')%>
